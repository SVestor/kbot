name: Get-secret

on:
  workflow_dispatch

jobs:
  get-secret:
    name: get-secret
    runs-on: ubuntu-20.04
    
    #Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - uses: 'actions/checkout@v3'

    # Configure Workload Identity Federation via a credentials file
    - id: 'auth'
      name: 'Authenticate to GCP'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
        service_account: '${{ secrets.SA_EMAIL }}'
        
    # Install gcloud 'setup-gcloud' automatically picks up authentication from 'auth'
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
      
    # 'Setting up' kubectl
    - name: 'Set up kubectl'
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
      id: install  

    # Now you can run gcloud commands authenticated as the impersonated service account
    - id: 'gcloud'
      name: 'gcloud'
      run: |-
        echo "SECRET_VALUE=$(gcloud secrets versions access latest --secret=TEST)" >> "$GITHUB_ENV"
        echo "SECRET_TEST=$(gcloud secrets versions access latest --secret=TEST)" >> "$GITHUB_OUTPUT"
        
        export SECRET_V="$(gcloud secrets versions access latest --secret=TEST)" 
        echo ${SECRET_V} > file.txt
        kubectl -n flux-demo create secret generic kbot-demo --from-literal=token=${SECRET_V} --dry-run=client -o yaml > secret.yaml
        cat secret.yaml
        
        #gcloud kms keys list --location global --keyring sops-flux-kr
        
        
    - run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV 
    - run: |
        echo "VERSION = ${VERSION}"
        echo "SECRET_VALUE = ${SECRET_VALUE}"
        echo "SECRET_TEST = ${{ steps.gcloud.outputs.SECRET_TEST }}"
        echo "SECRET_V = ${SECRET_V}"
        cat file.txt
        
        
        
        
        
     
