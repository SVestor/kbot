name: Get-secret

on:
  workflow_dispatch

env:
  SOPS_REPO: "mozilla/sops"
  OS: "linux"
  ARCH: "amd64"
  
jobs:
  get-secret:
    name: get-secret
    runs-on: ubuntu-20.04
    
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: 'actions/checkout@v3'

    # Configure Workload Identity Federation via a credentials file
      - id: 'auth'
        name: 'Authenticate to GCP'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.SA_EMAIL }}'
        
    # Install gcloud 'setup-gcloud' automatically picks up authentication from 'auth'
      - name: 'Setting up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      
    # 'Setting up' kubectl
      - name: 'Setting up kubectl'
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'
        id: install  
      
    # 'Setting up' sops
      - name: 'Setting up sops'
        run: |-
          export BIN_URL="https://api.github.com/repos/${SOPS_REPO}/releases/latest"
          curl -Lo sops "$(curl -Ls ${BIN_URL} | grep 'browser_download_url' | cut -d '"' -f 4 | grep "${OS}.${ARCH}$")"
          chmod +x sops

    # Now you can run gcloud commands authenticated as the impersonated service account
    # 'Getting & encrypting a secret'
      - id: 'secret'
        name: 'Getting & encrypting'
        env: 
          SOPS_KEY: '${{ secrets.SOPS_KEY }}'
        run: |-
          export SECRET_V="$(gcloud secrets versions access latest --secret=TEST_SECRET)" 
          echo ${SECRET_V} > file.txt
          kubectl -n flux-demo create secret generic kbot-demo --from-literal=token=${SECRET_V} --dry-run=client -o yaml > secret.yaml
          ls -a 
          which kubectl
          ./sops -e -gcp-kms ${SOPS_KEY} --encrypted-regex '^(token)$' secret.yaml > secret-enc.yaml
          cat secret-enc.yaml
      
      
      - run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV 
      - run: |-
          echo "SECRET_VALUE=$(gcloud secrets versions access latest --secret=TEST_SECRET)" >> "$GITHUB_ENV"
          echo "SECRET_TEST=$(gcloud secrets versions access latest --secret=TEST_SECRET)" >> "$GITHUB_OUTPUT"
      - run: |
          echo "VERSION = ${VERSION}"
          echo "SECRET_VALUE = ${SECRET_VALUE}"
          echo "SECRET_TEST = ${{ steps.gcloud.outputs.SECRET_TEST }}"
          echo "SECRET_V = ${SECRET_V}"
          cat file.txt
        
        
        
        
        
     
